apiVersion: flows.netobserv.io/v1alpha1
kind: FlowCollector
metadata:
  name: cluster
  namespace: network-observability
spec:
  loki:
    timeout: 10s
    maxRetries: 10
    maxBackoff: 300s
    tenantID: netobserv
    staticLabels:
      app: netobserv-flowcollector
    url: 'http://loki.loki.svc:3100/'
    batchWait: 1s
    minBackoff: 1s
    tls:
      caCert:
        certFile: service-ca.crt
        name: loki
        type: configmap
      enable: false
      insecureSkipVerify: false
    batchSize: 102400
  agent: ebpf
  kafka:
    address: kafka-cluster-kafka-bootstrap.network-observability
    enable: false
    tls:
      caCert:
        certFile: ca.crt
        name: kafka-cluster-cluster-ca-cert
        type: secret
      enable: false
      insecureSkipVerify: false
      userCert:
        certFile: user.crt
        certKey: user.key
        name: flp-kafka
        type: secret
    topic: network-flows
  consolePlugin:
    logLevel: info
    port: 9001
    register: true
    portNaming:
      enable: true
      portNames:
        '3100': loki
    imagePullPolicy: IfNotPresent
    image: 'quay.io/netobserv/network-observability-console-plugin:v0.1.4'
    replicas: 1
  ovnKubernetes:
    containerName: ovnkube-node
    daemonSetName: ovnkube-node
    namespace: ovn-kubernetes
  ipfix:
    cacheActiveTimeout: 20s
    cacheMaxFlows: 400
    forceSampleAll: false
    sampling: 400
  ebpf:
    logLevel: info
    cacheMaxFlows: 1000
    imagePullPolicy: IfNotPresent
    excludeInterfaces:
      - lo
    cacheActiveTimeout: 5s
    interfaces: []
    image: 'quay.io/netobserv/netobserv-ebpf-agent:v0.1.2'
    privileged: false
    sampling: 0
  clusterNetworkOperator:
    namespace: openshift-network-operator
  namespace: network-observability
  flowlogsPipeline:
    logLevel: info
    port: 2055
    prometheusPort: 9102
    ignoreMetrics: []
    imagePullPolicy: IfNotPresent
    enableKubeProbes: true
    image: 'quay.io/netobserv/flowlogs-pipeline:v0.1.3'
    replicas: 1
    healthPort: 8080
    dropUnusedFields: true
    kind: DaemonSet
